"use strict";(self.webpackChunkhaithong_194=self.webpackChunkhaithong_194||[]).push([[9776],{741:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"kernel/mini_alpine/mini_alpine","title":"Mini alpine","description":"* Goal 1: Create & boot a pair of vmlinuz+initrd from alpine-minirootfs","source":"@site/docs/kernel/mini_alpine/mini_alpine.md","sourceDirName":"kernel/mini_alpine","slug":"/kernel/mini_alpine/","permalink":"/docs/kernel/mini_alpine/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/kernel/mini_alpine/mini_alpine.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"hijack","permalink":"/docs/kernel/hijack/"},"next":{"title":"Preempt","permalink":"/docs/kernel/preempt/"}}');var s=r(4848),l=r(8453);const t={},a="Mini alpine",d={},c=[{value:"Goal 1",id:"goal-1",level:3},{value:"Steps:",id:"steps",level:4},{value:"Detail each steps:",id:"detail-each-steps",level:4},{value:"Goal 2",id:"goal-2",level:3},{value:"Active APK",id:"active-apk",level:3},{value:"Active Openssh",id:"active-openssh",level:3}];function o(e){const n={code:"code",h1:"h1",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"mini-alpine",children:"Mini alpine"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Goal 1: Create & boot a pair of vmlinuz+initrd from alpine-minirootfs"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Small size image"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"-rw-------  1 root root 5.6M Jun  8 21:24 initramfs-virt\r\n-rw-r--r--  1 root root  12M Jun  8 07:09 vmlinuz-virt\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Run in RAM only:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'qemu-system-x86_64 \\\r\n-m 512M \\\r\n-kernel vmlinuz-virt \\\r\n-initrd initramfs-virt \\\r\n-netdev tap,id=net0,ifname=tap0,script=no,downscript=no \\\r\n-device virtio-net-pci,netdev=net0 \\\r\n-append "console=ttyS0 init=/init" \\\r\n-enable-kvm \\\r\n-nographic\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Goad 2: provide internet connection via NAT"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"internet",src:r(7420).A+""})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"goal-1",children:"Goal 1"}),"\n",(0,s.jsx)(n.h4,{id:"steps",children:"Steps:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'#\r\nwget https://dl-cdn.alpinelinux.org/alpine/v3.22/releases/x86_64/alpine-minirootfs-3.22.0-x86_64.tar.gz\r\n#\r\nmkdir rootfs\r\ntar -xzf alpine-minirootfs-3.22.0-x86_64.tar.gz -C rootfs\r\n#\r\ncd rootfs\r\n#\r\nmount --bind /proc proc\r\nmount --bind /dev dev\r\nmount --bind /sys sys\r\n#\r\necho "nameserver 8.8.8.8" > etc/resolv.conf\r\n#\r\nchroot . /bin/sh\r\n#\r\napk add alpine-base linux-virt mkinitfs\r\n#   /lib/modules/6.12.31-0-virt\r\nmkinitfs -k 6.12.31-0-virt\r\n\r\n\r\n# images located at boot\r\nls /boot\n'})}),"\n",(0,s.jsx)(n.h4,{id:"detail-each-steps",children:"Detail each steps:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Download minirootfs from alpine homepage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"#\r\nwget https://dl-cdn.alpinelinux.org/alpine/v3.22/releases/x86_64/alpine-minirootfs-3.22.0-x86_64.tar.gz\r\n#\r\nmkdir rootfs\r\n#\r\ntar -xzf alpine-minirootfs-3.22.0-x86_64.tar.gz -C rootfs\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"chroot to rootfs"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'# bind host -> rootfs\r\ncd rootfs\r\nmount --bind /proc proc\r\nmount --bind /dev dev\r\nmount --bind /sys sys\r\n\r\n# provide DNS for rootfs\r\necho "nameserver 8.8.8.8" > etc/resolv.conf\r\n\r\n# chroot to rootfs\r\nchroot . /bin/sh\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"inside chroot, update package"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"apk add alpine-base linux-virt mkinitfs\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Note1. Change repository by:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'echo "http://dl-cdn.alpinelinux.org/alpine/v3.22/main" >> /etc/apk/repositories\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Note 2. ",(0,s.jsx)(n.code,{children:"alpine-base"})," provide:\r\nbusybox \u2013 provides standard UNIX tools (sh, ls, mount, ifconfig, etc.)"]}),"\n",(0,s.jsx)(n.p,{children:"alpine-baselayout \u2013 sets up filesystem hierarchy (/etc, /var, /run, etc.)"}),"\n",(0,s.jsx)(n.p,{children:"alpine-conf \u2013 contains init scripts, system config (/etc/inittab, setup-* scripts)"}),"\n",(0,s.jsx)(n.p,{children:"libcrypt \u2013 password hashing"}),"\n",(0,s.jsx)(n.p,{children:"libgcc \u2013 runtime library for GCC-built programs"}),"\n",(0,s.jsx)(n.p,{children:"musl \u2013 the C standard library"}),"\n",(0,s.jsx)(n.p,{children:"openrc \u2013 the default init system in Alpine"}),"\n",(0,s.jsx)(n.p,{children:"apk-tools \u2013 the Alpine package manager (apk)"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Note3. ",(0,s.jsx)(n.code,{children:"linux-virt"})," is suitable with QEMU."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["This package provide:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"/boot/vmlinuz-virt"}),"\n",(0,s.jsx)(n.li,{children:"/lib/module/6.12.31-0-virt"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"linux-lts"})," for normal hardware"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Note 4. Install some usefull package basedon your need:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"apk add iproute2\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Make initrd"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:' mkinitfs -F "base virtio" -k 6.12.31-0-virt\r\n==> initramfs: creating /boot/initramfs-virt for 6.12.31-0-virt\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Node 0. ",(0,s.jsx)(n.code,{children:"base virtio"})," is features"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["by default, mkinitfs builds features inside ",(0,s.jsx)(n.code,{children:"/etc/mkinitfs/mkinitfs.conf"}),","]}),"\n",(0,s.jsxs)(n.li,{children:["but, it not work in my env, so I specify it in the call to ",(0,s.jsx)(n.code,{children:"mkinitfs"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Note 1. ",(0,s.jsx)(n.code,{children:"/etc/mkinitfs/mkinitfs.conf"})," contain features for initrd"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'# default configure is:\r\n#    features="ata base cdrom ext4 keymap kms mmc nvme raid scsi usb virtio"\r\n#\r\n\r\n#\r\n# custom mkinitfs conf:\r\n#\r\n# Specify features to include\r\nfeatures="base,virtio"\r\n\r\n# Kernel modules path (optional, defaults to /lib/modules/<version>)\r\nmodloop=/lib/modules/6.12.31-0-virt\r\n\r\n# Additional files (optional, if not using feature.d/*.files)\r\nadd_files="/sbin/openrc-init /bin/sh"\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Note 2. files & modules are defined at ",(0,s.jsx)(n.code,{children:"/etc/mkinitfs/features.d"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["E.g: define new features","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"/etc/mkinitfs/features.d # cat netfilter.modules \r\nkernel/net/netfilter/*\r\n\r\n/etc/mkinitfs/features.d # cat netfilter.files\r\n/usr/sbin/ipvsadm\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"QEMU boot"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'qemu-system-x86_64 \\\r\n-m 512 \\\r\n-kernel vmlinuz-virt \\\r\n-initrd initramfs-virt \\\r\n-append "console=ttyS0 init=/init" \\\r\n-nographic\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"goal-2",children:"Goal 2"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Create bridge ",(0,s.jsx)(n.code,{children:"br0"})," and ",(0,s.jsx)(n.code,{children:"tap0"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"sudo ip link add name br0 type bridge\r\nsudo ip addr add 192.168.100.1/24 dev br0\r\nsudo ip link set br0 up\r\n\r\n# create tap device\r\nsudo ip tuntap add dev tap0 mode tap user $USER\r\nsudo ip link set tap0 master br0\r\nsudo ip link set tap0 up\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["route between ",(0,s.jsx)(n.code,{children:"eth0"})," -> ",(0,s.jsx)(n.code,{children:"br0"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"# alow traffic from br0 -> eth0 -> internet\r\niptables -A FORWARD -i br0 -o eth0 -j ACCEPT\r\n\r\n# alow traffic back from eth0 -> br0\r\niptables -A FORWARD -i eth0 -o br0 -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n\r\n# NAT\r\n sudo iptables -t nat -A POSTROUTING -s 192.168.100.0/24 -o eth0 -j MASQUERADE\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"boot QEMU with"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'qemu-system-x86_64 \\\r\n-m 512M \\\r\n-kernel vmlinuz-virt \\\r\n-initrd initramfs-virt \\\r\n-netdev tap,id=net0,ifname=tap0,script=no,downscript=no \\\r\n-device virtio-net-pci,netdev=net0 \\\r\n-append "console=ttyS0 init=/init" \\\r\n-enable-kvm \\\r\n-nographic\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'# config ip\r\nip a add 192.168.100.200/24 dev eth0\r\nip link set eth0 up\r\n\r\n# config route\r\nip route add default via 192.168.100.1 dev eth0\r\n\r\n# DNS\r\necho "nameserver 8.8.8.8" > /etc/resolv.conf\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Note 0: use ",(0,s.jsx)(n.code,{children:"virtio-net-pci"})," device because Alpine has virtio driver"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"lsmod | grep vir\r\nvirtio_net            118784  0 \r\nnet_failover           24576  1 virtio_net\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Note 1:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"# route\r\nip route\r\ndefault via 192.168.100.1 dev eth0 \r\n192.168.100.0/24 dev eth0 scope link  src 192.168.100.200 \r\n\r\n# ip addr\r\nip a show eth0\r\n2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP qlen 1000\r\n    link/ether 52:54:00:12:34:56 brd ff:ff:ff:ff:ff:ff\r\n    inet 192.168.100.200/24 scope global eth0\r\n    valid_lft forever preferred_lft forever\r\n    inet6 fe80::5054:ff:fe12:3456/64 scope link \r\n    valid_lft forever preferred_lft forever\r\n\r\n# ping local\r\nping -c 3 192.168.100.1\r\nPING 192.168.100.1 (192.168.100.1): 56 data bytes\r\n64 bytes from 192.168.100.1: seq=0 ttl=64 time=0.203 ms\r\n64 bytes from 192.168.100.1: seq=1 ttl=64 time=0.198 ms\r\n64 bytes from 192.168.100.1: seq=2 ttl=64 time=0.220 ms\r\n\r\n--- 192.168.100.1 ping statistics ---\r\n3 packets transmitted, 3 packets received, 0% packet loss\r\nround-trip min/avg/max = 0.198/0.207/0.220 ms\r\n\r\n# ping google\r\nping -c 3 google.com\r\nPING google.com (142.250.198.206): 56 data bytes\r\n64 bytes from 142.250.198.206: seq=0 ttl=114 time=51.240 ms\r\n64 bytes from 142.250.198.206: seq=1 ttl=114 time=51.227 ms\r\n64 bytes from 142.250.198.206: seq=2 ttl=114 time=51.228 ms\r\n\r\n--- google.com ping statistics ---\r\n3 packets transmitted, 3 packets received, 0% packet loss\r\nround-trip min/avg/max = 51.227/51.231/51.240 ms\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"active-apk",children:"Active APK"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["First call to ",(0,s.jsx)(n.code,{children:"apk"})," was failed"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ apk update\r\nERROR: Unable to lock database: No such file or directory\r\nERROR: Failed to open apk database: No such file or directory\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The reason is mini-rootfs does not have 3 files/direct: ",(0,s.jsx)(n.code,{children:"/etc/apk/world"})," and ",(0,s.jsx)(n.code,{children:"/var/lib/"})," and ",(0,s.jsx)(n.code,{children:"/lib/apk/db"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Just create the 2 files/dir"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'#\r\ntouch /etc/apk/world\r\n# must add `alpine-base` \r\necho "alpine-base" > /etc/apk/world\r\necho "openssl" >> /etc/apk/world\r\n\r\n#\r\nmkdir -p /var/lib\r\nmkdir -p /lib/apk/db\r\n\r\n# this will work\r\napk update\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Note:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["the lock database is just a file located in ",(0,s.jsx)(n.code,{children:"/lib/apk/db/lock"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Edit repository Url:"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'echo "http://dl-cdn.alpinelinux.org/alpine/v3.22/main" > /etc/apk/repositories\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Add openrc:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"apk fix openrc\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"active-openssh",children:"Active Openssh"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"# install\r\napk add openssh\r\n\r\n# create dummy user and keygen\r\necho 'sshd:x:50:50:sshd:/var/empty:/sbin/nologin' >> /etc/passwd\r\n/usr/bin/ssh-keygen -A\r\n\r\n# Start\r\n/usr/sbin/sshd -D -e &\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"# restart sshd\r\n# Stop if running\r\npkill sshd\r\n\r\n# Start fresh\r\n/usr/sbin/sshd -D -e &\n"})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},7420:(e,n,r)=>{r.d(n,{A:()=>i});const i=r.p+"assets/images/networks-f5c1b9412bc166972dc332f2768727a8.svg"},8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>a});var i=r(6540);const s={},l=i.createContext(s);function t(e){const n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);