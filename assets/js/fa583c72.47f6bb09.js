"use strict";(self.webpackChunkhaithong_194=self.webpackChunkhaithong_194||[]).push([[1942],{1585:(e,r,t)=>{t.d(r,{A:()=>n});const n=t.p+"assets/images/fromref-0528f4c4da96e669de821e1404fce5fe.svg"},6567:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"rust/axum/FromRef","title":"FromRef","description":"* Use Trait (or macro) to extracts Sub-State from a big State","source":"@site/docs/rust/axum/FromRef.md","sourceDirName":"rust/axum","slug":"/rust/axum/FromRef","permalink":"/docs/rust/axum/FromRef","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rust/axum/FromRef.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Axum","permalink":"/docs/rust/axum/"},"next":{"title":"back_pressure","permalink":"/docs/rust/axum/back_pressure"}}');var a=t(4848),s=t(8453);const o={},c="FromRef",i={},u=[];function l(e){const r={code:"code",h1:"h1",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.header,{children:(0,a.jsx)(r.h1,{id:"fromref",children:"FromRef"})}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsx)(r.li,{children:"Use Trait (or macro) to extracts Sub-State from a big State"}),"\n"]}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.img,{alt:"fromref",src:t(1585).A+"",width:"602",height:"282"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-rust",children:"// trait\r\npub trait FromRef<T> {\r\n    /// Converts to this type from a reference to the input type.\r\n    fn from_ref(input: &T) -> Self;\r\n}\r\n\r\nimpl<T> FromRef<T> for T\r\nwhere\r\n    T: Clone,\r\n{\r\n    fn from_ref(input: &T) -> Self {\r\n        input.clone()\r\n    }\r\n}\n"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-rust",children:"// macro\r\n#[derive(FromRef, Clone)]\r\nstruct AppState {\r\n    auth_token: AuthToken,\r\n    database_pool: DatabasePool,\r\n    // fields can also be skipped\r\n    #[from_ref(skip)]\r\n    api_token: String,\r\n}\n"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-rust",children:"// extractor\r\nasync fn handler(State(auth_token): State<AuthToken>) {}\r\n\r\nasync fn other_handler(State(database_pool): State<DatabasePool>) {}\r\n\n"})})]})}function m(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>o,x:()=>c});var n=t(6540);const a={},s=n.createContext(a);function o(e){const r=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(s.Provider,{value:r},e.children)}}}]);