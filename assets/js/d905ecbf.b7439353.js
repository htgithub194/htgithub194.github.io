"use strict";(self.webpackChunkhaithong_194=self.webpackChunkhaithong_194||[]).push([[7159],{4893:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/problem-06701607449ecd052cbb783429e2d068.svg"},5021:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/1st_design_channel-3e630f1c5a1c7fbd37ec16348ad57781.svg"},5077:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/2nd_design_channel-60147656461a65962fdb2d011c3c0a8f.svg"},7273:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"programming_concept/conditional_variable/conditional_variable","title":"Conditional Variable","description":"Defination","source":"@site/docs/programming_concept/conditional_variable/conditional_variable.md","sourceDirName":"programming_concept/conditional_variable","slug":"/programming_concept/conditional_variable/","permalink":"/docs/programming_concept/conditional_variable/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/programming_concept/conditional_variable/conditional_variable.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Tunnel","permalink":"/docs/networking/tunnel/"},"next":{"title":"Dependency Injection","permalink":"/docs/programming_concept/dependency_injection/"}}');var s=n(4848),l=n(8453);const r={},d="Conditional Variable",a={},c=[{value:"Defination",id:"defination",level:3}];function o(e){const t={h1:"h1",h3:"h3",header:"header",img:"img",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"conditional-variable",children:"Conditional Variable"})}),"\n",(0,s.jsx)(t.h3,{id:"defination",children:"Defination"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"A Synchronization primative."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Alow thread to wait for a specific condition"}),"\n",(0,s.jsx)(t.li,{children:"Thread goes to sleep when waiting"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"What is the difference between ConditionVariable vs Mutext?"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Mutext:","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Thread waits for Mutex to be unlocked"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["ConditionVariable:","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Thread waits for a notification"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"The difference is seem not much clear. Let's take an example of a channel which will be used by multiple threads."}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"The channel consits of a Queue to hold a shared data."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"A thread can push data to the channel."}),"\n",(0,s.jsx)(t.li,{children:"Another thread can read data from channel."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"We can think of using mutex to protect the shared data. At a given point of time, only 1 thread can have access and modify the shared data."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"1st_design_channel",src:n(5021).A+"",title:"1st_design_channel",width:"423",height:"322"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["The 1st design has a problem:","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"The consume thread has no way to know if the channel is empty or not."}),"\n",(0,s.jsx)(t.li,{children:"So, consume thread might try to acquire the Mutex lock for nothing (in case queue is empty),"}),"\n",(0,s.jsx)(t.li,{children:"And, consume thread also has to release the Mutex lock, so the produce thread can push data in queue."}),"\n",(0,s.jsx)(t.li,{children:"It means, the consume thread has to acquire the lock, see nothing in the queue, and release it, and then re-acquire, ..."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"problem",src:n(4893).A+"",title:"problem",width:"462",height:"543"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Conditional Variable comes to the rescue. Let's imagine the scenario:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Consume thread"}),(0,s.jsx)(t.th,{}),(0,s.jsx)(t.th,{style:{textAlign:"right"},children:"Produce thread"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"acquire Mutex lock"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{style:{textAlign:"right"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"see nothing in queue"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{style:{textAlign:"right"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"setups a Conditional Variable"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{style:{textAlign:"right"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Release mutex"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{style:{textAlign:"right"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"goes to sleep"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{style:{textAlign:"right"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"}}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{style:{textAlign:"right"},children:"acquire Mutex lock"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"}}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{style:{textAlign:"right"},children:"push data on queue"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"}}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{style:{textAlign:"right"},children:"release Mutex lock"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"}}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{style:{textAlign:"right"},children:"use the Conditional Variable to notify to Consume Thread"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"wakeup by Conditional Variable"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{style:{textAlign:"right"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"acquire Mutex lock"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{style:{textAlign:"right"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"read from queue"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{style:{textAlign:"right"}})]})]})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"2nd_design_channel",src:n(5077).A+"",title:"2nd_design_channel",width:"322",height:"926"})})]})}function h(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>d});var i=n(6540);const s={},l=i.createContext(s);function r(e){const t=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(l.Provider,{value:t},e.children)}}}]);